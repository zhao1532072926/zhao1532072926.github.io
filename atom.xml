<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>林鼠小窝</title>
  
  <subtitle>不能记住过去的人，被判重复过去。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-12T04:56:12.016Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>墨封</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB3.4安装及卸载</title>
    <link href="http://yoursite.com/2018/04/12/MongoDB3-4%E5%AE%89%E8%A3%85%E5%8F%8A%E5%8D%B8%E8%BD%BD/"/>
    <id>http://yoursite.com/2018/04/12/MongoDB3-4安装及卸载/</id>
    <published>2018-04-12T04:52:10.000Z</published>
    <updated>2018-04-12T04:56:12.016Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装MongoDB3-4"><a href="#安装MongoDB3-4" class="headerlink" title="安装MongoDB3.4"></a>安装MongoDB3.4</h3><p><strong>1. 导入包管理系统使用的公钥</strong><br>   Ubuntu 的软件包管理工具（即dpkg和APT）要求软件包的发布者通过GPG密钥签名来确保软件包的一致性和真实性。通过以下命令导入MongoDB公共GPG密钥：<br>    sudo apt-key adv –keyserver hkp://keyserver.ubuntu.com:80 –recv 0C49F3730359A14518585931BC711F9BA15703C6</p><p><strong>2. 创建list file</strong><br>根据 Ubuntu 的版本使用适当的命令创建 list file: /etc/apt/sources.list.d/mongodb-org-3.4.list</p><p>  ubuntu14.04<br>    echo “deb [ arch=amd64 ] <a href="http://repo.mongodb.org/apt/ubuntu" target="_blank" rel="noopener">http://repo.mongodb.org/apt/ubuntu</a> trusty/mongodb-org/3.4 multiverse” | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</p><p>  ubuntu16.04<br>    echo “deb [ arch=amd64,arm64 ] <a href="http://repo.mongodb.org/apt/ubuntu" target="_blank" rel="noopener">http://repo.mongodb.org/apt/ubuntu</a> xenial/mongodb-org/3.4 multiverse” | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list</p><p><strong>3. 重新下载本地包数据库索引</strong><br>    <code>sudo apt-get update</code></p><p><strong>4. 安装 MongoDB</strong><br>    <code>sudo apt-get install -y mongodb-org</code></p><h3 id="运行MongoDB"><a href="#运行MongoDB" class="headerlink" title="运行MongoDB"></a>运行MongoDB</h3><p><strong>测试MongoDB shell</strong><br>命令行运行命令：<br>    <code>mongo</code><br><strong>启动MongoDB</strong><br>    <code>sudo service mongod start</code></p><pre><code># 或者`sudo systemctl start mongod`</code></pre><p> 注意：1、mongodb3.4安装完是自动运行的，不必自己手动启动；2、仔细看上述命令，是<code>mongod</code>，不是<code>mongodb</code></p><p><strong>关闭MongoDB</strong><br>    <code>sudo service mongod stop</code></p><p><strong>重启MongoDB</strong><br>    <code>sudo service mongod restart</code></p><p><strong>查看MongoDB情况</strong><br>    <code>sudo service mongod status</code></p><h2 id="卸载MongoDB"><a href="#卸载MongoDB" class="headerlink" title="卸载MongoDB"></a>卸载MongoDB</h2><p> <strong>1. 关闭MongoDB</strong><br>    <code>sudo service mongod stop</code></p><p> <strong>2. 删除所有相关软件包</strong><br>    <code>sudo apt-get purge mongodb-org*</code><br>注意：末尾的<code>*</code>不要漏下</p><p> <strong>3. 删除数据和日志目录</strong><br>    <code>sudo rm -r /var/log/mongodb    sudo rm -r /var/lib/mongodb</code></p><p>感谢大拿：<br><a href="https://buzheng.org/2017/20170118-install-mongodb-on-ubuntu.html" target="_blank" rel="noopener">https://buzheng.org/2017/20170118-install-mongodb-on-ubuntu.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装MongoDB3-4&quot;&gt;&lt;a href=&quot;#安装MongoDB3-4&quot; class=&quot;headerlink&quot; title=&quot;安装MongoDB3.4&quot;&gt;&lt;/a&gt;安装MongoDB3.4&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. 导入包管理系统使用的公钥&lt;/stron
      
    
    </summary>
    
    
      <category term="mongodb, 安装, 卸载" scheme="http://yoursite.com/tags/mongodb-%E5%AE%89%E8%A3%85-%E5%8D%B8%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB3.4开启用户验证、设置远程连接及更改数据存储路径</title>
    <link href="http://yoursite.com/2018/04/12/MongoDB3-4%E5%BC%80%E5%90%AF%E7%94%A8%E6%88%B7%E9%AA%8C%E8%AF%81%E3%80%81%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E5%8F%8A%E6%9B%B4%E6%94%B9%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E8%B7%AF%E5%BE%84/"/>
    <id>http://yoursite.com/2018/04/12/MongoDB3-4开启用户验证、设置远程连接及更改数据存储路径/</id>
    <published>2018-04-12T04:03:27.000Z</published>
    <updated>2018-04-12T04:57:12.425Z</updated>
    
    <content type="html"><![CDATA[<p>3.4版本的mongodb配置文件为<code>/etc/mongod.conf</code>，格式是yaml。<a href="https://docs.mongodb.com/manual/reference/configuration-options/#storage-options" target="_blank" rel="noopener">点击查看官方文档</a></p><h2 id="开启用户验证"><a href="#开启用户验证" class="headerlink" title="开启用户验证"></a>开启用户验证</h2><p><a href="https://docs.mongodb.com/manual/tutorial/enable-authentication/" target="_blank" rel="noopener">点击查看官方指南</a><br><strong>1. 添加用户</strong><br>启动mongodb：<br>    <code>mongod</code></p><p>启动mongodb shell<br>    <code>mongo</code><br>添加用户：<br>    <figure class="highlight plain"><figcaption><span>admin</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: &quot;myUserAdmin&quot;,</span><br><span class="line">    pwd: &quot;abc123&quot;,</span><br><span class="line">    roles: [ &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p><strong>2. 更改配置文件</strong></p><p>在配置文件中将<br>    <code>#security:</code><br>中的<code>#</code>去掉，并在其下一行，空两个空格，加上<code>authorization: enabled</code>，如下<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">authorization: enabled</span><br></pre></td></tr></table></figure></p><p>注意：<code>authorization: enabled</code>中冒号后加一个空格，这是yaml语法所要求的</p><p><strong>3. 重启mongodb数据库</strong><br>    <code>sudo service mongod restart</code><br>注意：命令中是<code>mongod</code>，不是<code>mongodb</code></p><h2 id="设置远程连接"><a href="#设置远程连接" class="headerlink" title="设置远程连接"></a>设置远程连接</h2><p>注意：老版本的图形界面管理软件可能不支持新版本的数据库，测试之前请保证软件是可用的</p><p>在配置文件中将<br>    <code>bindIp: 127.0.0.1</code><br>注释掉（即在句首加<code>#</code>）<br>    <code>#bindIp: 127.0.0.1</code></p><p>重启数据库<br>    <code>sudo service mongod restart</code></p><h2 id="更改数据目录"><a href="#更改数据目录" class="headerlink" title="更改数据目录"></a>更改数据目录</h2><p>默认的数据存储目录是<code>/var/lib/mongodb</code>，假设我们的目的路径是<code>/home/mongodb</code></p><p>关闭数据库<br>    <code>sudo service mongod stop</code><br>在配置文件中将<code>storage.dbPath</code>项设置为目的路径，修改后如下<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbPath: /home/mongodb</span><br></pre></td></tr></table></figure></p><p>将原目录下的文件复制到新目录中：<br>    <code>sudo cp -r /var/lib/mongodb/* /home/mongodb/</code></p><p>将<code>mongod.lock</code>文件删除后启动数据库<br>    <figure class="highlight plain"><figcaption><span>rm</span><a href="/home/mongodb/mongod.lock">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mongod start</span><br></pre></td></tr></table></figure></p><p>测试远程连接</p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>当你的<code>mongo</code>命令报错，连接失败时，请尝试删除数据存储目录下的<code>mongod.lock</code>文件后，重启mongodb数据库</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;3.4版本的mongodb配置文件为&lt;code&gt;/etc/mongod.conf&lt;/code&gt;，格式是yaml。&lt;a href=&quot;https://docs.mongodb.com/manual/reference/configuration-options/#storage
      
    
    </summary>
    
    
      <category term="mongodb, mongo, 访问控制" scheme="http://yoursite.com/tags/mongodb-mongo-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>毕设日志-2018/3/31</title>
    <link href="http://yoursite.com/2018/03/31/%E6%AF%95%E8%AE%BE%E6%97%A5%E5%BF%97-2018-3-31/"/>
    <id>http://yoursite.com/2018/03/31/毕设日志-2018-3-31/</id>
    <published>2018-03-31T07:25:30.000Z</published>
    <updated>2018-03-31T08:53:13.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="毕设日志-2018-3-31"><a href="#毕设日志-2018-3-31" class="headerlink" title="毕设日志-2018/3/31"></a>毕设日志-2018/3/31</h1><hr><p>毕设中趟过很多坑，一方面老师要求记录，另一方面也作为自己的前车之辙。<br>立个规矩，每天记日志，将零散的知识做个记录，每周整理一下，看能否成文一篇博客。</p><h2 id="1-pymysql"><a href="#1-pymysql" class="headerlink" title="1. pymysql"></a>1. pymysql</h2><ol><li><code>pymysql.connect()</code> 函数接受 <code>autocommit</code> 参数，默认为 <code>False</code> ,需要显示提交<code>conn.commit()</code></li><li><code>with pymysql.connect(..) as cursor:</code> 返回的值是 <code>Cursor</code> 实例，且会自动提交修改。</li><li>防止sql注入–参数化查询：<code>cursor.execute(sql,(a,b,c))</code>, sql中无论参数类型，一律用%s占位，函数会根据参数类型自动转化，如None–&gt;NULL</li><li>批量提交 <code>cursor.executemany(sql,(data1,data2,data3,,,))</code> </li><li><strong>当结果集很大时，为避免内存被撑爆</strong>，可以在连接时设置游标类型，使用流式游标<code>SSCursor</code>: <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> pymysql.cursors</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(....cursorclass=pymysql.cursors.SSDictCursor)  <span class="comment"># 重点在这</span></span><br><span class="line">cursor = conn.cursor()</span><br><span class="line">cursor.execute(sql)</span><br><span class="line"></span><br><span class="line">result = cursor.fetchone()  <span class="comment"># 调用方法 </span></span><br><span class="line"><span class="keyword">while</span> result:</span><br><span class="line">    deal(result)</span><br><span class="line">    result = cursor.fetchone()</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-scrapy"><a href="#2-scrapy" class="headerlink" title="2. scrapy"></a>2. scrapy</h2><p>有点无从下手，实在是有点大，接触还是很浅，等我的全网爬虫完成后再写这块吧。</p><hr><p><em>今天就先到这，没有及时记录，很多东西都忘掉了=。=</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;毕设日志-2018-3-31&quot;&gt;&lt;a href=&quot;#毕设日志-2018-3-31&quot; class=&quot;headerlink&quot; title=&quot;毕设日志-2018/3/31&quot;&gt;&lt;/a&gt;毕设日志-2018/3/31&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;毕设中趟过很多坑，一方面老师要求记
      
    
    </summary>
    
    
      <category term="毕设日志 pymysql" scheme="http://yoursite.com/tags/%E6%AF%95%E8%AE%BE%E6%97%A5%E5%BF%97-pymysql/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu git环境搭建以及通过SSH连接Github（免密码）配置</title>
    <link href="http://yoursite.com/2018/02/07/ubuntu-git%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%8F%8A%E9%80%9A%E8%BF%87SSH%E8%BF%9E%E6%8E%A5Github%EF%BC%88%E5%85%8D%E5%AF%86%E7%A0%81%EF%BC%89%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/02/07/ubuntu-git环境搭建以及通过SSH连接Github（免密码）配置/</id>
    <published>2018-02-07T14:32:33.000Z</published>
    <updated>2018-02-07T14:40:56.566Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git本地环境配置"><a href="#Git本地环境配置" class="headerlink" title="Git本地环境配置"></a>Git本地环境配置</h2><h3 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h3 id="2-配置用户信息"><a href="#2-配置用户信息" class="headerlink" title="2. 配置用户信息"></a>2. 配置用户信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name&quot;</span><br><span class="line">$ git config --global user.email Your_email@example.com</span><br></pre></td></tr></table></figure><h3 id="3-初始化本地仓库配置"><a href="#3-初始化本地仓库配置" class="headerlink" title="3. 初始化本地仓库配置"></a>3. 初始化本地仓库配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h2 id="通过SSH连接Github"><a href="#通过SSH连接Github" class="headerlink" title="通过SSH连接Github"></a>通过SSH连接Github</h2><h3 id="1-安装SSH"><a href="#1-安装SSH" class="headerlink" title="1. 安装SSH"></a>1. 安装SSH</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ssh</span><br></pre></td></tr></table></figure><p>首先 ssh-keygen 会确认密钥的存储位置和文件名（默认是 .ssh/id_rsa）,然后他会要求你输入两次密钥口令，留空即可。所以一般选用默认，全部回车即可。</p><h3 id="2-创建密钥文件"><a href="#2-创建密钥文件" class="headerlink" title="2. 创建密钥文件"></a>2. 创建密钥文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的github账号邮箱&quot;</span><br></pre></td></tr></table></figure><p>默认密钥文件路径在<code>~/.ssh</code>，<code>id_rsa</code>是私钥文件，<code>id_rsa.pub</code>是公钥文件</p><h3 id="3-将公钥添加到Github"><a href="#3-将公钥添加到Github" class="headerlink" title="3. 将公钥添加到Github"></a>3. 将公钥添加到Github</h3><ol><li>将<code>id_rsa.pub</code>文件内容全部复制</li><li>登陆到GitHub上，右上角小头像-&gt;Setting-&gt;SSH and GPG keys中，点击new SSH key。</li></ol><h3 id="4-SSH测试"><a href="#4-SSH测试" class="headerlink" title="4. SSH测试"></a>4. SSH测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果结果为 “ …You’ve successfully authenticated, but GitHub does not provide shell access”，则说明成功。</p><h3 id="5-设置远程仓库"><a href="#5-设置远程仓库" class="headerlink" title="5. 设置远程仓库"></a>5. 设置远程仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:Username/Repositories_Name.git</span><br></pre></td></tr></table></figure><p><em>如果手误输错，可通过<code>git remote remove origin</code>命令删除该远程仓库。</em></p><h3 id="6-最终测试"><a href="#6-最终测试" class="headerlink" title="6.最终测试"></a>6.最终测试</h3><ol><li>在本地创建更改</li><li><code>git add xxx</code></li><li><code>git commit -m &quot;xxxxxx&quot;</code></li><li><code>git push origin master</code></li></ol><p>OK！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git本地环境配置&quot;&gt;&lt;a href=&quot;#Git本地环境配置&quot; class=&quot;headerlink&quot; title=&quot;Git本地环境配置&quot;&gt;&lt;/a&gt;Git本地环境配置&lt;/h2&gt;&lt;h3 id=&quot;1-安装git&quot;&gt;&lt;a href=&quot;#1-安装git&quot; class=&quot;he
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/02/06/hello-world/"/>
    <id>http://yoursite.com/2018/02/06/hello-world/</id>
    <published>2018-02-06T14:08:56.175Z</published>
    <updated>2018-02-06T14:08:56.176Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
